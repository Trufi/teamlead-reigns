{"version":3,"sources":["suites/index.ts","suites/offer.ts","suites/ads.ts","utils.ts","reducers.ts","components/score/index.tsx","components/card/index.tsx","components/app/index.tsx","serviceWorker.ts","index.tsx","state.ts","components/score/index.module.css","components/card/index.module.css"],"names":["suites","offer","startCard","character","description","yes","scores","money","nextCard","skipSteps","card","no","team","ads","audience","randomDeckCard","seed","suiteNames","Object","keys","_random","random","_random2","slicedToArray","nextSeed","randomValue","suiteName","Math","floor","length","suite","reducer","state","action","type","showAnswer","_ref","answer","objectSpread","effect","_state$deck","toArray","deck","slice","newDeck","res","unshift","newScores","undefined","lose","checkLose","day","_action","score","diff","sc","v","value","min","max","code","newCard","array","index","newItem","concat","toConsumableArray","Score","willChange","react_default","a","createElement","className","styles","container","point","pointInner","style","visibility","volume","innerVolume","height","icon","CardComponent","_ref$card","dispatch","_useState","useState","down","start","move","_useState2","setState","onMouseUp","useEffect","window","addEventListener","removeEventListener","choice","R","x","angle","asin","y","sqrt","movePart","onMouseDown","ev","preventDefault","clientX","clientY","onMouseMove","onTouchStart","touch","touches","onTouchMove","transform","ScoresComponent","display","justifyContent","padding","score_Score","Boolean","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_randomDeckCard","_randomDeckCard2","createState","_useReducer2","app_ScoresComponent","card_CardComponent","marginTop","textAlign","fontSize","position","top","left","width","lineHeight","fontWeight","color","background","userSelect","bottom","fontStyle","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.84b19bca.chunk.js","sourcesContent":["import { offer } from './offer';\nimport { ads } from './ads';\nimport { Suite } from '../types';\n\nexport const suites: { [key: string]: Suite } = {\n    offer,\n    ads,\n};\n","import { Suite } from '../types';\n\nexport const offer: Suite = {\n    startCard: {\n        character: 'Вася',\n        description: 'Я ухожу, меня позвали в Google на зарплату х2',\n        yes: {\n            description: 'Поднять зп до х2',\n            scores: {\n                money: -20,\n            },\n            nextCard: {\n                skipSteps: 3,\n                card: {\n                    character: 'Петя',\n                    description:\n                        'Почему Васе подняли зарплату, а мне нет? Он делает в 2 раза меньше меня',\n                    yes: {\n                        description: 'Поднять зп Пете',\n                        scores: {\n                            money: -20,\n                        },\n                    },\n                    no: {\n                        description: 'У Васи сложная ситуация',\n                        scores: {\n                            team: -10,\n                        },\n                    },\n                },\n            },\n        },\n        no: {\n            description: 'Ну и катись!',\n            scores: {\n                team: -20,\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const ads: Suite = {\n    startCard: {\n        character: 'Лена',\n        description: 'Повесим рекламный баннер на входе?',\n        yes: {\n            description: 'Деньги — нужны',\n            scores: {\n                audience: -10,\n                money: 20,\n            },\n        },\n        no: {\n            description: 'Чёт, перебор',\n            scores: {\n                audience: 5,\n                money: -10,\n            },\n        },\n    },\n};\n","import { suites } from './suites';\nimport { DeckCard } from './types';\n\nexport const random = (seed: number) => {\n    seed = (seed * 16807) % 2147483647;\n    return [seed, (seed - 1) / 2147483646];\n};\n\nexport const arrayInsert = <T>(array: T[], index: number, newItem: T): T[] => [\n    ...array.slice(0, index),\n    newItem,\n    ...array.slice(index),\n];\nexport const clamp = (value: number, min: number, max: number) => {\n    value = Math.max(value, min);\n    value = Math.min(value, max);\n    return value;\n};\n\nexport const randomDeckCard = (seed: number): [number, DeckCard] => {\n    const suiteNames = Object.keys(suites);\n    const [nextSeed, randomValue] = random(seed);\n    const suiteName = suiteNames[Math.floor(randomValue * suiteNames.length)];\n    const deckCard: DeckCard = {\n        suite: suiteName,\n        card: suites[suiteName].startCard,\n    };\n    return [nextSeed, deckCard];\n};\n","import {\n    Action,\n    State,\n    YesAction,\n    NoAction,\n    Scores,\n    ScoresEffect,\n    DeckCard,\n    NextCard,\n    CardChoice,\n    ShowAnswerAction,\n} from './types';\nimport { arrayInsert, randomDeckCard, clamp } from './utils';\n\nexport const reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'yes':\n            return yes(state, action);\n        case 'no':\n            return no(state, action);\n        case 'showAnswer':\n            return showAnswer(state, action);\n        default:\n            return state;\n    }\n};\n\nconst showAnswer = (state: State, { answer }: ShowAnswerAction): State => {\n    return {\n        ...state,\n        answer,\n    };\n};\n\nconst effect = (state: State, effect: CardChoice): State => {\n    let [{ suite }, ...deck] = state.deck;\n\n    if (effect.nextCard) {\n        deck = newDeck(deck, effect.nextCard, suite);\n    }\n\n    let { seed } = state;\n\n    if (deck.length === 0) {\n        const res = randomDeckCard(seed);\n        seed = res[0];\n        deck.unshift(res[1]);\n    }\n\n    const scores = newScores(state.scores, effect.scores);\n\n    return {\n        ...state,\n        seed,\n        scores,\n        deck,\n        answer: undefined,\n        lose: checkLose(scores),\n        day: state.day + 1,\n    };\n};\n\nconst yes = (state: State, _action: YesAction): State => {\n    return effect(state, state.deck[0].card.yes);\n};\n\nconst no = (state: State, _action: NoAction): State => {\n    return effect(state, state.deck[0].card.no);\n};\n\nconst newScores = (score: Scores, diff: ScoresEffect): Scores => {\n    const sc = (v: number) => clamp(v, 0, 100);\n\n    return {\n        audience: diff.audience ? sc(score.audience + diff.audience) : score.audience,\n        money: diff.money ? sc(score.money + diff.money) : score.money,\n        team: diff.team ? sc(score.team + diff.team) : score.team,\n        code: diff.code ? sc(score.code + diff.code) : score.code,\n    };\n};\n\nconst newDeck = (deck: Array<DeckCard>, newCard: NextCard, suite: string): Array<DeckCard> => {\n    return arrayInsert(deck, newCard.skipSteps, { suite, card: newCard.card });\n};\n\nconst checkLose = (scores: Scores): boolean => {\n    return (\n        scores.audience === 0 ||\n        scores.audience === 100 ||\n        scores.code === 0 ||\n        scores.code === 100 ||\n        scores.money === 0 ||\n        scores.money === 100 ||\n        scores.team === 0 ||\n        scores.team === 100\n    );\n};\n","import React from 'react';\nimport styles from './index.module.css';\n\nexport interface ScoreProps {\n    type: string;\n    value: number;\n    willChange?: boolean;\n}\n\nexport const Score = ({ type, value, willChange }: ScoreProps) => {\n    return (\n        <div className={styles.container}>\n            <div className={styles.point}>\n                {\n                    <div\n                        className={styles.pointInner}\n                        style={{ visibility: willChange ? 'visible' : 'hidden' }}\n                    />\n                }\n            </div>\n            <div className={styles.volume}>\n                <div\n                    className={styles.innerVolume}\n                    style={{\n                        height: `${value}%`,\n                    }}\n                />\n            </div>\n            <div className={styles.icon}>{type}</div>\n        </div>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Card, Dispatch } from '../../types';\nimport styles from './index.module.css';\n\nexport interface CardComponentProps {\n    card: Card;\n    dispatch: Dispatch;\n}\n\nconst choiceThreshold = 30;\n\nexport const CardComponent = ({\n    card: { character, description, yes, no },\n    dispatch,\n}: CardComponentProps) => {\n    const [state, setState] = useState({\n        down: false,\n        start: [0, 0],\n        move: [0, 0],\n    });\n\n    const onMouseDown = (ev: React.MouseEvent) => {\n        ev.preventDefault();\n        setState({\n            ...state,\n            down: true,\n            start: [ev.clientX, ev.clientY],\n        });\n    };\n\n    const onTouchStart = (ev: React.TouchEvent) => {\n        ev.preventDefault();\n        const touch = ev.touches[0];\n        setState({\n            ...state,\n            down: true,\n            start: [touch.clientX, touch.clientY],\n        });\n    };\n\n    const onMouseUp = () => {\n        if (!state.down) {\n            return;\n        }\n\n        if (state.move[0] > choiceThreshold) {\n            dispatch({ type: 'yes' });\n        } else if (state.move[0] < -choiceThreshold) {\n            dispatch({ type: 'no' });\n        }\n\n        setState({\n            ...state,\n            down: false,\n            start: [0, 0],\n            move: [0, 0],\n        });\n    };\n\n    const onMouseMove = (ev: React.MouseEvent) => {\n        ev.preventDefault();\n\n        if (!state.down) {\n            return;\n        }\n\n        if (state.move[0] > choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'yes' });\n        } else if (state.move[0] < -choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'no' });\n        } else {\n            dispatch({ type: 'showAnswer', answer: undefined });\n        }\n\n        setState({\n            ...state,\n            move: [ev.clientX - state.start[0], ev.clientY - state.start[1]],\n        });\n    };\n\n    const onTouchMove = (ev: React.TouchEvent) => {\n        ev.preventDefault();\n        if (!state.down) {\n            return;\n        }\n\n        if (state.move[0] > choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'yes' });\n        } else if (state.move[0] < -choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'no' });\n        } else {\n            dispatch({ type: 'showAnswer', answer: undefined });\n        }\n\n        const touch = ev.touches[0];\n        setState({\n            ...state,\n            move: [touch.clientX - state.start[0], touch.clientY - state.start[1]],\n        });\n    };\n\n    useEffect(() => {\n        window.addEventListener('mouseup', onMouseUp);\n        window.addEventListener('touchend', onMouseUp);\n        return () => {\n            window.removeEventListener('mouseup', onMouseUp);\n            window.removeEventListener('touchend', onMouseUp);\n        };\n    });\n\n    const R = 500;\n    const x = state.move[0];\n    // x^2 + y^2 = R^2\n    // y = \\/r^2 - x^2\n    // x = sinA * R\n    const angle = Math.asin(x / R);\n    const y = Math.sqrt(R * R - x * x);\n\n    let choice: JSX.Element | undefined;\n\n    if (state.move[0] > choiceThreshold) {\n        choice = <div className={styles.choice}>{yes.description}</div>;\n    } else if (state.move[0] < -choiceThreshold) {\n        choice = <div className={styles.choice}>{no.description}</div>;\n    }\n\n    return (\n        <div className={styles.container}>\n            <div\n                className={styles.movePart}\n                onMouseDown={onMouseDown}\n                onMouseMove={onMouseMove}\n                onTouchStart={onTouchStart}\n                onTouchMove={onTouchMove}\n                style={{\n                    transform: `translate(${state.move[0]}px, ${R - y}px) rotate(${angle}rad)`,\n                }}\n            >\n                <div className={styles.description}>{description}</div>\n                {/* <div>\n                    {state.move[0]} - {state.move[1]} - {y} - {angle}\n                </div> */}\n                {choice}\n                {character && <div className={styles.character}>{character}</div>}\n            </div>\n        </div>\n    );\n};\n","import React, { useReducer } from 'react';\nimport { reducer } from '../../reducers';\nimport { createState } from '../../state';\nimport { Scores, ScoresEffect } from '../../types';\nimport { Score } from '../score';\nimport { CardComponent } from '../card';\n\ninterface ScoresProps {\n    scores: Scores;\n    effect?: ScoresEffect;\n}\n\nconst ScoresComponent = ({ scores, effect }: ScoresProps) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between', padding: '30px' }}>\n            <div>\n                <Score\n                    type={'audience'}\n                    value={scores.audience}\n                    willChange={effect && Boolean(effect.audience)}\n                />\n            </div>\n            <div>\n                <Score\n                    type={'code'}\n                    value={scores.code}\n                    willChange={effect && Boolean(effect.code)}\n                />\n            </div>\n            <div>\n                <Score\n                    type={'team'}\n                    value={scores.team}\n                    willChange={effect && Boolean(effect.team)}\n                />\n            </div>\n            <div>\n                <Score\n                    type={'money'}\n                    value={scores.money}\n                    willChange={effect && Boolean(effect.money)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport const App = () => {\n    const [state, dispatch] = useReducer(reducer, createState(1));\n\n    const card = state.deck[0].card;\n\n    return (\n        <div>\n            <ScoresComponent\n                scores={state.scores}\n                effect={state.answer && card[state.answer].scores}\n            />\n            <CardComponent card={card} dispatch={dispatch} />\n            <div style={{ marginTop: '20px', textAlign: 'center' }}>\n                <div style={{ fontSize: '60px' }}>{state.day}</div>\n                <div>day</div>\n            </div>\n            {state.lose && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100vw',\n                        height: '100vh',\n                        lineHeight: '100vh',\n                        textAlign: 'center',\n                        fontSize: '70px',\n                        fontWeight: 700,\n                        color: '#ff0000',\n                        background: 'radial-gradient(#ff00004f, #00000000)',\n                        userSelect: 'none',\n                    }}\n                >\n                    WASTED\n                </div>\n            )}\n            <div\n                style={{\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    fontStyle: 'italic',\n                    fontSize: '10px',\n                }}\n            >\n                Игра про сложную жизнь тимлида. Все совпадения случайны.\n            </div>\n        </div>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { State } from './types';\nimport { randomDeckCard } from './utils';\n\nexport const createState = (seed: number): State => {\n    const [nextSeed, deckCard] = randomDeckCard(seed);\n\n    return {\n        seed: nextSeed,\n        scores: {\n            audience: 50,\n            money: 50,\n            code: 50,\n            team: 50,\n        },\n        deck: [deckCard],\n        lose: false,\n        day: 1,\n    };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"score_container__jQKy_\",\"point\":\"score_point__1Rs-2\",\"pointInner\":\"score_pointInner__2vtxz\",\"volume\":\"score_volume__3dj9j\",\"innerVolume\":\"score_innerVolume__IbpTs\",\"icon\":\"score_icon__3S58M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__1Hmar\",\"movePart\":\"card_movePart__1d6FU\",\"description\":\"card_description__3Lddi\",\"character\":\"card_character__1GHwD\",\"choice\":\"card_choice__SsE7H\"};"],"sourceRoot":""}