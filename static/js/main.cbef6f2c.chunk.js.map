{"version":3,"sources":["components/card/index.module.css","components/score/index.module.css","components/app/index.module.css","components/gameover/index.module.css","components/scoresHeader/index.module.css","suites/offer.ts","suites/newTech.ts","suites/bank.ts","suites/vegan.ts","suites/deviceCut.ts","suites/index.ts","suites/ads.ts","suites/refactor.ts","suites/fridayRelease.ts","suites/junior.ts","suites/analog.ts","suites/prodVsTech.ts","utils.ts","state.ts","reducers.ts","components/card/index.tsx","components/score/index.tsx","components/scoresHeader/index.tsx","components/gameover/index.tsx","serviceWorker.ts","index.tsx","components/app/index.tsx"],"names":["module","exports","comeback","skipSteps","character","description","yes","scores","team","no","elm","nextCard","money","code","lastRepayment","turned","recycle","objection","audience","suites","offer","startCard","ads","newTech","refactor","fridayRelease","junior","bank","analog","vegan","deviceCut","prodVsTech","random","seed","randomDeck","suiteNames","Object","keys","randomizeArray","map","name","suite","card","inArray","array","i","length","rnd","index","Math","floor","t","createState","deck","lose","day","reducer","state","action","type","showAnswer","answer","effect","newItem","slice","newScores","undefined","checkLose","_action","score","diff","sc","v","value","min","max","choiceThreshold","PrevCardComponent","data","x","y","angle","useState","position","setPosition","useEffect","timeout","setTimeout","sign","clearTimeout","className","styles","prevCard","style","transform","CardContent","choice","getChoice","content","CardComponent","dispatch","down","start","move","setState","R","asin","sqrt","getCardPosition","onMouseUp","window","addEventListener","removeEventListener","container","key","movePart","onMouseDown","ev","preventDefault","clientX","clientY","onMouseMove","onTouchStart","touch","touches","onTouchMove","shirt","Score","delta","cn","failed","point","pointInner","low","abs","high","volume","innerVolume","height","icon","ScoresHeader","messages","GameOver","message","onClick","title","Boolean","location","hostname","match","ReactDOM","render","initialState","round","storageItem","localStorage","getItem","storageState","JSON","parse","useReducer","setItem","stringify","days","dayCounter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbef6f2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__1Hmar\",\"prevCard\":\"card_prevCard__aeOXJ\",\"movePart\":\"card_movePart__1d6FU\",\"show\":\"card_show__2ccQU\",\"shirt\":\"card_shirt__6zHxw\",\"shirtRotate\":\"card_shirtRotate__3fc_M\",\"content\":\"card_content__2YvVB\",\"contentRotate\":\"card_contentRotate__2w7Eg\",\"description\":\"card_description__3Lddi\",\"character\":\"card_character__1GHwD\",\"choice\":\"card_choice__SsE7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"score_container__jQKy_\",\"point\":\"score_point__1Rs-2\",\"pointInner\":\"score_pointInner__2vtxz\",\"low\":\"score_low__2XLNn\",\"high\":\"score_high__3lVD5\",\"volume\":\"score_volume__3dj9j\",\"failed\":\"score_failed__2F71C\",\"innerVolume\":\"score_innerVolume__IbpTs\",\"icon\":\"score_icon__3S58M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3Lji0\",\"days\":\"app_days__3wqFC\",\"dayCounter\":\"app_dayCounter__8UYA2\",\"description\":\"app_description__d7Hdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"gameover_container__25hMU\",\"title\":\"gameover_title__ymC5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"scoresHeader_container__s8Wfd\"};","import { Suite, Card } from '../types';\n\nconst character = 'Артем, мухожук';\n\nconst comeback: Card = {\n    skipSteps: 15,\n    character,\n    description: 'Хочу назад',\n    yes: {\n        description: 'Ок',\n        scores: {\n            team: 10,\n        },\n    },\n    no: {\n        description: 'Нет',\n    },\n};\n\nexport const offer: Suite = {\n    startCard: {\n        character,\n        description: 'Я ухожу, меня позвали в Nanosoft с увеличением зарплаты на 20%',\n        skipSteps: 0,\n        yes: {\n            description: 'Поднять зарплату',\n            scores: {\n                money: -10,\n            },\n            nextCard: {\n                skipSteps: 3,\n                character,\n                description:\n                    'Друг предложил мне работать в Pear, я подумал и ухожу, там зарплата на 50% выше',\n                yes: {\n                    description: 'Поднять зарплату',\n                    scores: {\n                        money: -15,\n                    },\n                    nextCard: {\n                        skipSteps: 3,\n                        character,\n                        description: 'Ухожу. Hooli. x2.',\n                        yes: {\n                            description: 'Поднять зарплату до х2',\n                            scores: {\n                                money: -20,\n                            },\n                            nextCard: {\n                                skipSteps: 3,\n                                character: 'Петя, сеньор',\n                                description:\n                                    'Почему Васе подняли зарплату, а мне нет? Он делает в 2 раза меньше меня!',\n                                yes: {\n                                    description: 'Поднять зарплату Пете',\n                                    scores: {\n                                        money: -20,\n                                    },\n                                },\n                                no: {\n                                    description: 'У Васи сложная ситуация',\n                                    scores: {\n                                        team: -10,\n                                    },\n                                },\n                            },\n                        },\n                        no: {\n                            description: 'Ну и катись!',\n                            scores: {\n                                team: -20,\n                            },\n                            nextCard: comeback,\n                        },\n                    },\n                },\n                no: {\n                    description: 'Ну, удачи',\n                    scores: {\n                        team: -10,\n                    },\n                    nextCard: comeback,\n                },\n            },\n        },\n        no: {\n            description: 'Прощай',\n            scores: {\n                team: -10,\n            },\n            nextCard: comeback,\n        },\n    },\n};\n","import { Suite, Card } from '../types';\n\nconst elm: Card = {\n    skipSteps: 5,\n    character: 'Федор, новатор',\n    description: 'Хочу попробовать на проекте язык Elm',\n    yes: {\n        description: 'Давай попробуй',\n        scores: { team: 5 },\n        nextCard: {\n            skipSteps: 3,\n            character: 'Лена, аналитик',\n            description: 'Пора искать нового разработчика со знанием Elm',\n            yes: {\n                description: 'Ищем',\n                scores: { money: -5 },\n                nextCard: {\n                    skipSteps: 3,\n                    character: 'Лиза, HR',\n                    description:\n                        'На рынке нет разрабов со знанием Elm, берем обычного со знанием JS?',\n                    yes: {\n                        description: 'А что делать? Берем',\n                        scores: {\n                            money: -10,\n                            team: 10,\n                            code: -5,\n                        },\n                    },\n                    no: {\n                        description: 'Нет',\n                        scores: {\n                            money: 5,\n                            team: -10,\n                            code: -10,\n                        },\n                    },\n                },\n            },\n            no: {\n                description: 'Нет',\n                scores: {\n                    team: -10,\n                    money: 10,\n                    code: -10,\n                },\n            },\n        },\n    },\n    no: {\n        description: 'Зачем? Нет',\n        scores: { team: -10 },\n        // тут он дальше пробует еще какую-нибудь хипстерскую технологию\n    },\n};\n\nexport const newTech: Suite = {\n    startCard: {\n        character: 'Федор, новатор',\n        description: 'Хочу для нового модуля использовать Reason',\n        skipSteps: 0,\n        yes: {\n            description: 'Попробуй',\n            scores: {\n                team: 5,\n            },\n            nextCard: {\n                skipSteps: 3,\n                character: 'Лена, аналитик',\n                description: 'Пора нанимать нового разработчика со знанием Reason',\n                yes: {\n                    description: 'Вперед!',\n                    scores: {\n                        money: -5,\n                    },\n                    nextCard: {\n                        skipSteps: 3,\n                        character: 'Лиза, HR',\n                        description:\n                            'Мы нашли разработчика со знанием Reason, но он привык к зарплате в полтора раза выше, берем?',\n                        yes: {\n                            description: 'Берем',\n                            scores: {\n                                money: -20,\n                                team: 10,\n                            },\n                            nextCard: elm,\n                        },\n                        no: {\n                            description: 'Нет',\n                            scores: {\n                                team: -10,\n                                code: -10,\n                                money: 5,\n                            },\n                            nextCard: elm,\n                        },\n                    },\n                },\n                no: {\n                    description: 'Нет',\n                    scores: {\n                        code: -10,\n                        team: -10,\n                        money: 10,\n                    },\n                    nextCard: elm,\n                },\n            },\n        },\n        no: {\n            description: 'Нет',\n            scores: {\n                team: -5,\n            },\n            nextCard: elm,\n        },\n    },\n};\n","import { Suite, Card } from '../types';\n\nconst lastRepayment: Card = {\n    skipSteps: 5,\n    character: 'Владислав, личный менеджер',\n    description: 'Здравствуйте, последняя выплата по кредиту',\n    yes: {\n        description: 'На',\n        scores: {\n            money: -15,\n        },\n    },\n    no: {\n        description: 'Нет',\n        nextCard: {\n            skipSteps: 5,\n            character: 'Владимир, судебный пристав',\n            description: 'Мы забираем у вас компьютеры на сумму задолженности',\n            yes: {\n                description: 'Что...',\n                scores: {\n                    money: -10,\n                    team: -5,\n                },\n            },\n            no: {\n                description: 'Что...',\n                scores: {\n                    money: -10,\n                    team: -5,\n                },\n            },\n        },\n    },\n};\n\nexport const bank: Suite = {\n    startCard: {\n        character: 'Владислав, личный менеджер',\n        description:\n            'Здравствуйте, я ваш личный менеджер. Не желаете приобрести кредит на выгодных условиях?',\n        skipSteps: 0,\n        yes: {\n            description: 'Желаю',\n            scores: {\n                money: 20,\n            },\n            nextCard: {\n                skipSteps: 5,\n                character: 'Владислав, личный менеджер',\n                description: 'Здравствуйте, пора делать первую выплату по кредиту',\n                yes: {\n                    description: 'Ок',\n                    scores: {\n                        money: -15,\n                    },\n                    nextCard: lastRepayment,\n                },\n                no: {\n                    description: 'Нет',\n                    nextCard: {\n                        skipSteps: 0,\n                        character: 'Владислав, личный менеджер',\n                        description:\n                            'Вам придется заплатить неустойку и мы все еще ждем от вас выплату',\n                        yes: {\n                            description: 'Ок',\n                            scores: {\n                                money: -15,\n                            },\n                            nextCard: lastRepayment,\n                        },\n                        no: {\n                            description: 'Нет',\n                            nextCard: {\n                                skipSteps: 5,\n                                character: 'Кирилл, коллектор',\n                                description: 'Когда вернете кредит?',\n                                yes: {\n                                    description: 'Нате',\n                                    scores: {\n                                        money: -30,\n                                    },\n                                },\n                                no: {\n                                    description: 'Обойдетесь',\n                                    nextCard: {\n                                        skipSteps: 2,\n                                        character: 'Кирилл и Сергей, коллекторы',\n                                        description: 'Где деньги, Лебовски?',\n                                        yes: {\n                                            description: 'Ковер не трогайте',\n                                            scores: {\n                                                money: -30,\n                                            },\n                                        },\n                                        no: {\n                                            description: 'Уходите',\n                                            nextCard: {\n                                                skipSteps: 2,\n                                                character: 'Кирилл, Сергей, Андрей, коллекторы',\n                                                description: 'Слышь, ты че, не понял?',\n                                                yes: {\n                                                    description: 'Понял',\n                                                    scores: {\n                                                        money: -30,\n                                                    },\n                                                },\n                                                no: {\n                                                    description: 'Нет',\n                                                    nextCard: {\n                                                        skipSteps: 0,\n                                                        character:\n                                                            'Кирилл, Сергей, Андрей, коллекторы',\n                                                        description: 'Кончай с ним, Серега',\n                                                        yes: {\n                                                            description: 'Что...',\n                                                            scores: {\n                                                                money: -100,\n                                                                audience: -100,\n                                                                code: -100,\n                                                                team: -100,\n                                                            },\n                                                        },\n                                                        no: {\n                                                            description: 'Что...',\n                                                            scores: {\n                                                                money: -100,\n                                                                audience: -100,\n                                                                code: -100,\n                                                                team: -100,\n                                                            },\n                                                        },\n                                                    },\n                                                },\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        no: {\n            description: 'Нет',\n        },\n    },\n};\n","import { Suite, Card } from '../types';\n\nconst character = 'Андрей, веган';\n\nconst turned: Card = {\n    character: 'Андрей, джуниор',\n    description: 'Я теперь тоже веган, хотел, чтобы ты знал',\n    skipSteps: 5,\n    yes: {\n        description: 'Ок',\n    },\n    no: {\n        description: 'Хм',\n    },\n};\n\nconst recycle: Card = {\n    character,\n    description: 'А давайте сортировать мусор по специальным контейнерам?',\n    skipSteps: 5,\n    yes: {\n        description: 'Ок',\n        scores: { team: 5 },\n        nextCard: turned,\n    },\n    no: {\n        description: 'Нет',\n        scores: { team: -5 },\n        nextCard: turned,\n    },\n};\n\nexport const vegan: Suite = {\n    startCard: {\n        character,\n        description: 'Может будем использовать свои кружки вместо пластиковых стаканчиков?',\n        skipSteps: 0,\n        yes: {\n            description: 'Ок',\n            scores: { money: -5 },\n            nextCard: recycle,\n        },\n        no: {\n            description: 'Нет',\n            scores: { team: -5 },\n            nextCard: {\n                skipSteps: 3,\n                character,\n                description: 'Ну может заменим стаканчики на картонные?',\n                yes: {\n                    description: 'Ладно',\n                    scores: { money: -5 },\n                    nextCard: recycle,\n                },\n                no: {\n                    description: 'Нет',\n                    scores: { team: -5 },\n                    nextCard: recycle,\n                },\n            },\n        },\n    },\n};\n","import { Suite, Card } from '../types';\n\nconst objection: Card = {\n    skipSteps: 0,\n    character: 'Лена, аналитик',\n    description: 'Но ведь WebGL 2.0 не поддерживается в 25% браузерах!',\n    yes: {\n        description: 'Пофиг',\n        scores: { team: 10, audience: -10 },\n    },\n    no: {\n        description: 'Не используем',\n        scores: { team: -10 },\n    },\n};\n\nexport const deviceCut: Suite = {\n    startCard: {\n        skipSteps: 0,\n        character: 'Федор, новатор',\n        description: 'Давай использовать WebGL 2.0? Он быстрее и круче.',\n        yes: {\n            description: '',\n            nextCard: objection,\n        },\n        no: {\n            description: '',\n            nextCard: objection,\n        },\n    },\n};\n","import { offer } from './offer';\nimport { ads } from './ads';\nimport { Suite } from '../types';\nimport { newTech } from './newTech';\nimport { refactor } from './refactor';\nimport { fridayRelease } from './fridayRelease';\nimport { junior } from './junior';\nimport { bank } from './bank';\nimport { analog } from './analog';\nimport { vegan } from './vegan';\nimport { deviceCut } from './deviceCut';\nimport { prodVsTech } from './prodVsTech';\n\nexport const suites: { [key: string]: Suite } = {\n    offer,\n    ads,\n    newTech,\n    refactor,\n    fridayRelease,\n    junior,\n    bank,\n    analog,\n    vegan,\n    deviceCut,\n    prodVsTech,\n};\n","import { Suite } from '../types';\n\nexport const ads: Suite = {\n    startCard: {\n        character: 'Лена, аналитик',\n        description: 'Повесим рекламный баннер на входе?',\n        skipSteps: 0,\n        yes: {\n            description: 'Деньги — нужны',\n            scores: {\n                audience: -10,\n                money: 20,\n            },\n        },\n        no: {\n            description: 'Чёт, перебор',\n            scores: {\n                audience: 5,\n                money: -10,\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const refactor: Suite = {\n    startCard: {\n        character: 'Петя, сеньор',\n        description: 'Я думаю, что нам пора порефакторить работу со стором',\n        skipSteps: 0,\n        yes: {\n            description: 'Давай',\n            scores: {\n                code: 20,\n                team: 5,\n                money: -10,\n            },\n        },\n        no: {\n            description: 'Нет',\n            scores: {\n                team: -5,\n                code: -10,\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const fridayRelease: Suite = {\n    startCard: {\n        character: 'Лена, аналитик',\n        description: 'Мы готовы выкатить новую фичу, но сегодня пятница, все равно релизимся?',\n        skipSteps: 0,\n        yes: {\n            description: 'Да',\n            scores: { money: 10, audience: 15 },\n            nextCard: {\n                skipSteps: 0,\n                character: 'Лена, аналитик',\n                description: 'Все плохо! У нас баг на бою!',\n                yes: {\n                    description: 'Фиксим!',\n                    scores: { team: -5, money: -10 },\n                },\n                no: {\n                    description: 'Подождет',\n                    scores: { audience: -10 },\n                },\n            },\n        },\n        no: {\n            description: 'Нет',\n            scores: { money: -5, audience: -5 },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const junior: Suite = {\n    startCard: {\n        character: 'Антон, джуниор',\n        description: 'А тебе, что больше нравится: ООП или ФП?',\n        skipSteps: 0,\n        yes: {\n            description: 'ООП',\n            nextCard: {\n                skipSteps: 3,\n                character: 'Андрей, джуниор',\n                description: 'Я сделал тройное наследование с абстрактным классом',\n                yes: {\n                    description: 'Попробуй примеси',\n                    scores: {\n                        team: 10,\n                        code: -10,\n                    },\n                },\n                no: {\n                    description: 'Завязывай с этим',\n                    scores: {\n                        team: -10,\n                    },\n                },\n            },\n        },\n        no: {\n            description: 'ФП',\n            nextCard: {\n                skipSteps: 3,\n                character: 'Петя, сеньор',\n                description:\n                    'Андрей пишет какой-то непонятный код и говорит, что это мультипликативный функтор',\n                yes: {\n                    description: 'Пусть учится',\n                    scores: {\n                        code: -20,\n                        team: -10,\n                    },\n                },\n                no: {\n                    description: 'Поговорю с ним',\n                    scores: {\n                        code: -10,\n                    },\n                },\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nconst analytic = 'Лена, аналитик';\nconst lawyer = 'Дмитрий, юрист';\n\nexport const analog: Suite = {\n    startCard: {\n        skipSteps: 0,\n        character: analytic,\n        description: 'В Китае делают 100% аналог нашего приложения, будем с ними судиться?',\n        yes: {\n            description: 'Да',\n            scores: { money: -10 },\n            nextCard: {\n                skipSteps: 3,\n                character: lawyer,\n                description:\n                    'Китайцы предлагают заключить мирное соглашение: они выплатят нам компенсацию, но продолжать разрабатывать приложение',\n                yes: {\n                    description: 'Хорошо',\n                    scores: { money: 20, audience: -10 },\n                },\n                no: {\n                    description: 'Нет, засудить!',\n                    scores: { money: -10, audience: 10 },\n                },\n            },\n        },\n        no: {\n            description: 'Нет',\n            scores: { audience: -10 },\n            nextCard: {\n                skipSteps: 3,\n                character: analytic,\n                description:\n                    'Китайцы со своим аналогом начинают отбирать у нас аудиторию, может попробуем их купить?',\n                yes: {\n                    description: 'Да',\n                    scores: { money: -20, audience: 20 },\n                },\n                no: {\n                    description: 'Нет',\n                    scores: { audience: -10 },\n                },\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const prodVsTech: Suite = {\n    startCard: {\n        skipSteps: 0,\n        character: 'Алексей, agile-мастер',\n        description: 'Скоро релиз, забьем на техдолг и сосредоточимся на продуктовых фичах?',\n        yes: {\n            description: 'Да',\n            scores: { code: -10, money: 10 },\n        },\n        no: {\n            description: 'Нет',\n            scores: { code: 10, money: -10 },\n        },\n    },\n};\n","import { suites } from './suites';\nimport { DeckCard } from './types';\n\nexport const randomSeed = () => Math.round(Math.random() * 2147483647);\n\nexport const random = (seed: number) => {\n    seed = (seed * 16807) % 2147483647;\n    return [seed, (seed - 1) / 2147483646];\n};\n\nexport const arrayInsert = <T>(array: T[], index: number, newItem: T): T[] => [\n    ...array.slice(0, index),\n    newItem,\n    ...array.slice(index),\n];\n\nexport const clamp = (value: number, min: number, max: number) => {\n    value = Math.max(value, min);\n    value = Math.min(value, max);\n    return value;\n};\n\nexport const randomDeckCard = (seed: number): [number, DeckCard] => {\n    const suiteNames = Object.keys(suites);\n    const [nextSeed, randomValue] = random(seed);\n    const suiteName = suiteNames[Math.floor(randomValue * suiteNames.length)];\n    const deckCard: DeckCard = {\n        suite: suiteName,\n        card: suites[suiteName].startCard,\n    };\n    return [nextSeed, deckCard];\n};\n\nexport const randomDeck = (seed: number): [number, DeckCard[]] => {\n    const suiteNames = Object.keys(suites);\n    const [nextSeed, rndNames] = randomizeArray(seed, suiteNames);\n    return [nextSeed, rndNames.map((name) => ({ suite: name, card: suites[name].startCard }))];\n};\n\nexport const randomizeArray = <T>(seed: number, inArray: T[]): [number, T[]] => {\n    const array = [...inArray];\n\n    for (let i = 0; i < array.length; i++) {\n        const rnd = random(seed);\n        seed = rnd[0];\n        const index = i + Math.floor(rnd[1] * (array.length - i));\n        const t = array[i];\n        array[i] = array[index];\n        array[index] = t;\n    }\n\n    return [seed, array];\n};\n","import { State } from './types';\nimport { randomDeck } from './utils';\n\nexport const createState = (seed: number): State => {\n    const [nextSeed, deck] = randomDeck(seed);\n\n    return {\n        seed: nextSeed,\n        scores: {\n            audience: 50,\n            money: 50,\n            code: 50,\n            team: 50,\n        },\n        deck,\n        lose: false,\n        day: 1,\n    };\n};\n","import {\n    Action,\n    State,\n    YesAction,\n    NoAction,\n    Scores,\n    ScoresEffect,\n    CardChoice,\n    ShowAnswerAction,\n} from './types';\nimport { arrayInsert, clamp, randomDeck } from './utils';\nimport { suites } from './suites';\nimport { createState } from './state';\n\nexport const reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'yes':\n            return yes(state, action);\n        case 'no':\n            return no(state, action);\n        case 'showAnswer':\n            return showAnswer(state, action);\n        case 'restart':\n            return createState(state.seed);\n        default:\n            return state;\n    }\n};\n\nconst showAnswer = (state: State, { answer }: ShowAnswerAction): State => {\n    return {\n        ...state,\n        answer,\n    };\n};\n\nconst effect = (state: State, effect: CardChoice): State => {\n    let [{ suite }, ...deck] = state.deck;\n\n    if (effect.nextCard) {\n        deck = arrayInsert(deck, effect.nextCard.skipSteps, { suite, card: effect.nextCard });\n    } else {\n        deck = [...deck, { suite, card: suites[suite].startCard }];\n    }\n\n    let { seed } = state;\n\n    if (deck.length === 0) {\n        [seed, deck] = randomDeck(seed);\n    }\n\n    const scores = effect.scores ? newScores(state.scores, effect.scores) : state.scores;\n\n    return {\n        ...state,\n        seed,\n        scores,\n        deck,\n        answer: undefined,\n        lose: checkLose(scores),\n        day: state.day + 1,\n    };\n};\n\nconst yes = (state: State, _action: YesAction): State => {\n    return effect(state, state.deck[0].card.yes);\n};\n\nconst no = (state: State, _action: NoAction): State => {\n    return effect(state, state.deck[0].card.no);\n};\n\nconst newScores = (score: Scores, diff: ScoresEffect): Scores => {\n    const sc = (v: number) => clamp(v, 0, 100);\n\n    return {\n        audience: diff.audience ? sc(score.audience + diff.audience) : score.audience,\n        money: diff.money ? sc(score.money + diff.money) : score.money,\n        team: diff.team ? sc(score.team + diff.team) : score.team,\n        code: diff.code ? sc(score.code + diff.code) : score.code,\n    };\n};\n\nconst checkLose = (scores: Scores): boolean => {\n    return (\n        scores.audience === 0 ||\n        scores.audience === 100 ||\n        scores.code === 0 ||\n        scores.code === 100 ||\n        scores.money === 0 ||\n        scores.money === 100 ||\n        scores.team === 0 ||\n        scores.team === 100\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Card, Dispatch } from '../../types';\nimport styles from './index.module.css';\n\nconst choiceThreshold = 30;\n\ninterface PrevCard {\n    x: number;\n    y: number;\n    angle: number;\n    card: Card;\n}\n\nconst PrevCardComponent = ({ data: { card, x, y, angle } }: { data: PrevCard }) => {\n    const [position, setPosition] = useState({ x, y, angle });\n    const { description, character } = card;\n\n    useEffect(() => {\n        // TODO: переделать на что-то более нормальное, чем setTimeout\n        const timeout = setTimeout(() => {\n            setPosition({\n                x: position.x + Math.sign(position.x) * 500,\n                y: position.y + 1000,\n                angle: position.angle + Math.sign(position.x) * 4,\n            });\n        }, 20);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [position.x, position.y, position.angle]);\n\n    return (\n        <div\n            className={styles.prevCard}\n            style={{\n                transform: `translate(${position.x}px, ${position.y}px) rotate(${position.angle}rad)`,\n            }}\n        >\n            <div className={styles.description}>{description}</div>\n            {character && <div className={styles.character}>{character}</div>}\n        </div>\n    );\n};\n\nconst CardContent = ({ card, x }: { card: Card; x: number }) => {\n    const choice = getChoice(x);\n\n    return (\n        <div className={styles.content}>\n            <div className={styles.description}>{card.description}</div>\n            {choice && card[choice].description.length > 0 && (\n                <div className={styles.choice}>{card[choice].description}</div>\n            )}\n            {card.character && <div className={styles.character}>{card.character}</div>}\n        </div>\n    );\n};\n\nexport interface CardComponentProps {\n    card: Card;\n    dispatch: Dispatch;\n}\n\nexport interface CardComponentState {\n    down: boolean;\n    start: number[];\n    move: number[];\n    prevCard?: PrevCard;\n}\n\nexport const CardComponent = ({ card, dispatch }: CardComponentProps) => {\n    const [state, setState] = useState<CardComponentState>({\n        down: false,\n        start: [0, 0],\n        move: [0, 0],\n    });\n\n    const { x, y, angle } = getCardPosition(state.move[0]);\n\n    const onMouseDown = (ev: React.MouseEvent) => {\n        ev.preventDefault();\n        setState({\n            ...state,\n            down: true,\n            start: [ev.clientX, ev.clientY],\n        });\n    };\n\n    const onTouchStart = (ev: React.TouchEvent) => {\n        ev.preventDefault();\n        const touch = ev.touches[0];\n        setState({\n            ...state,\n            down: true,\n            start: [touch.clientX, touch.clientY],\n        });\n    };\n\n    const onMouseUp = () => {\n        if (!state.down) {\n            return;\n        }\n\n        const choice = getChoice(state.move[0]);\n\n        setState({\n            ...state,\n            down: false,\n            start: [0, 0],\n            move: [0, 0],\n            prevCard: choice ? { x, y, angle, card } : undefined,\n        });\n\n        if (choice) {\n            dispatch({ type: choice });\n        }\n    };\n\n    const onMouseMove = (ev: React.MouseEvent) => {\n        ev.preventDefault();\n\n        if (!state.down) {\n            return;\n        }\n\n        dispatch({ type: 'showAnswer', answer: getChoice(state.move[0]) });\n\n        setState({\n            ...state,\n            move: [ev.clientX - state.start[0], ev.clientY - state.start[1]],\n        });\n    };\n\n    const onTouchMove = (ev: React.TouchEvent) => {\n        ev.preventDefault();\n        if (!state.down) {\n            return;\n        }\n\n        dispatch({ type: 'showAnswer', answer: getChoice(state.move[0]) });\n\n        const touch = ev.touches[0];\n        setState({\n            ...state,\n            move: [touch.clientX - state.start[0], touch.clientY - state.start[1]],\n        });\n    };\n\n    useEffect(() => {\n        window.addEventListener('mouseup', onMouseUp);\n        window.addEventListener('touchend', onMouseUp);\n        return () => {\n            window.removeEventListener('mouseup', onMouseUp);\n            window.removeEventListener('touchend', onMouseUp);\n        };\n    });\n\n    return (\n        <div className={styles.container}>\n            {state.prevCard && (\n                <PrevCardComponent\n                    data={state.prevCard}\n                    key={state.prevCard.card.description.slice(0, 9)}\n                />\n            )}\n            <div\n                // TODO: key переделать на uuid\n                key={card.description.slice(0, 10)}\n                className={styles.movePart}\n                onMouseDown={onMouseDown}\n                onMouseMove={onMouseMove}\n                onTouchStart={onTouchStart}\n                onTouchMove={onTouchMove}\n                style={{\n                    transform: `translate(${x}px, ${y}px) rotate(${angle}rad)`,\n                }}\n            >\n                <CardContent card={card} x={state.move[0]} />\n                <div className={styles.shirt} />\n            </div>\n        </div>\n    );\n};\n\nfunction getChoice(x: number): 'yes' | 'no' | undefined {\n    if (x > choiceThreshold) {\n        return 'yes';\n    }\n\n    if (x < -choiceThreshold) {\n        return 'no';\n    }\n}\n\nfunction getCardPosition(x: number) {\n    const R = 500;\n    // x^2 + y^2 = R^2\n    // y = \\/r^2 - x^2\n    // x = sinA * R\n    const angle = Math.asin(x / R);\n    const y = R - Math.sqrt(R * R - x * x);\n    return {\n        x,\n        y,\n        angle,\n    };\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport styles from './index.module.css';\n\nexport interface ScoreProps {\n    type: string;\n    value: number;\n    delta?: number;\n}\n\nexport const Score = ({ type, value, delta = 0 }: ScoreProps) => {\n    return (\n        <div className={cn(styles.container, { [styles.failed]: value === 0 || value === 100 })}>\n            <div className={styles.point}>\n                {delta !== 0 && (\n                    <div\n                        className={cn(styles.pointInner, {\n                            [styles.low]: Math.abs(delta) <= 5,\n                            [styles.high]: Math.abs(delta) >= 20,\n                        })}\n                    />\n                )}\n            </div>\n            <div className={styles.volume}>\n                <div\n                    className={styles.innerVolume}\n                    style={{\n                        height: `${value}%`,\n                    }}\n                />\n            </div>\n            <div className={styles.icon}>{type}</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport styles from './index.module.css';\nimport { Scores, ScoresEffect } from '../../types';\nimport { Score } from '../score';\n\nexport interface ScoresHeaderProps {\n    scores: Scores;\n    effect?: ScoresEffect;\n}\n\nexport const ScoresHeader = ({ scores, effect }: ScoresHeaderProps) => {\n    return (\n        <div className={styles.container}>\n            <div>\n                <Score\n                    type={'audience'}\n                    value={scores.audience}\n                    delta={effect && effect.audience}\n                />\n            </div>\n            <div>\n                <Score type={'code'} value={scores.code} delta={effect && effect.code} />\n            </div>\n            <div>\n                <Score type={'team'} value={scores.team} delta={effect && effect.team} />\n            </div>\n            <div>\n                <Score type={'money'} value={scores.money} delta={effect && effect.money} />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport styles from './index.module.css';\nimport { Scores, Dispatch } from '../../types';\n\nconst messages: { [key in keyof Scores]: { max: string; min: string } } = {\n    code: {\n        min: 'Проект стало невозможно поддерживать.',\n        max: 'Разработчики всецело посветили себя рефакторингу кода.',\n    },\n    money: {\n        min: 'Компания разорена.',\n        max: 'Босс заработал столько денег — сколько мечтал.',\n    },\n    audience: {\n        min: 'Ваш продукт забыт, и место ему в музее.',\n        max: 'Вас поглотил Hooli.',\n    },\n    team: {\n        min: 'Какой вы тимлид без команды?',\n        max: 'Компания слишком разрослась, процессы стали неуправляемыми.',\n    },\n};\n\nexport interface GameOverProps {\n    scores: Scores;\n    dispatch: Dispatch;\n}\n\nexport const GameOver = ({ scores, dispatch }: GameOverProps) => {\n    let message = '';\n\n    let score: keyof Scores;\n    for (score in scores) {\n        if (scores[score] === 0) {\n            message = messages[score].min;\n        } else if (scores[score] === 100) {\n            message = messages[score].max;\n        }\n    }\n\n    return (\n        <div className={styles.container} onClick={() => dispatch({ type: 'restart' })}>\n            <div className={styles.title}>FIRED</div>\n            <div className={styles.description}>{message}</div>\n        </div>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useReducer } from 'react';\nimport styles from './index.module.css';\nimport { reducer } from '../../reducers';\nimport { createState } from '../../state';\nimport { State } from '../../types';\nimport { CardComponent } from '../card';\nimport { randomSeed } from '../../utils';\nimport { ScoresHeader } from '../scoresHeader';\nimport { GameOver } from '../gameover';\n\nexport const App = () => {\n    let initialState = createState(randomSeed());\n\n    const storageItem = localStorage && localStorage.getItem('reigns');\n    if (storageItem) {\n        const storageState = JSON.parse(storageItem) as State;\n        if (!storageState.lose) {\n            initialState = storageState;\n        }\n    }\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    if (localStorage) {\n        localStorage.setItem('reigns', JSON.stringify(state));\n    }\n\n    const card = state.deck[0].card;\n\n    return (\n        <div className={styles.container}>\n            <ScoresHeader\n                scores={state.scores}\n                effect={state.answer && card[state.answer].scores}\n            />\n            {state.lose === false && <CardComponent card={card} dispatch={dispatch} />}\n            <div className={styles.days}>\n                <div className={styles.dayCounter}>{state.day}</div>\n                <div>day</div>\n            </div>\n            {state.lose && <GameOver scores={state.scores} dispatch={dispatch} />}\n            <div className={styles.description}>\n                Игра про сложную жизнь тимлида. Все совпадения случайны.\n            </div>\n        </div>\n    );\n};\n"],"sourceRoot":""}