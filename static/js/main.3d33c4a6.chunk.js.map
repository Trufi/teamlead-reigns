{"version":3,"sources":["components/card/index.module.css","suites/index.ts","suites/offer.ts","suites/ads.ts","suites/newTech.ts","suites/refactor.ts","suites/fridayRelease.ts","suites/junior.ts","utils.ts","reducers.ts","components/score/index.tsx","components/card/index.tsx","components/app/index.tsx","serviceWorker.ts","index.tsx","state.ts","components/score/index.module.css"],"names":["module","exports","container","movePart","description","character","choice","choiceEnter","choiceEnterActive","choiceExit","choiceExitActive","suites","offer","startCard","yes","scores","money","nextCard","skipSteps","card","no","team","ads","audience","newTech","code","refactor","fridayRelease","junior","random","seed","randomDeck","suiteNames","Object","keys","_randomizeArray","randomizeArray","_randomizeArray2","slicedToArray","map","name","suite","inArray","array","toConsumableArray","i","length","rnd","index","Math","floor","t","reducer","state","action","type","showAnswer","_ref","answer","objectSpread","effect","newItem","_state$deck","toArray","deck","slice","concat","_randomDeck","_randomDeck2","newScores","undefined","lose","checkLose","day","_action","score","diff","sc","v","value","min","max","Score","willChange","react_default","a","createElement","className","styles","point","pointInner","style","visibility","volume","innerVolume","height","icon","CardComponent","_ref$card","dispatch","_useState","useState","down","start","move","_useState2","setState","onMouseUp","useEffect","window","addEventListener","removeEventListener","R","x","angle","asin","y","sqrt","choiceDesc","onMouseDown","ev","preventDefault","clientX","clientY","onMouseMove","onTouchStart","touch","touches","onTouchMove","transform","CSSTransition","classNames","enter","enterActive","exit","exitActive","timeout","in","unmountOnExit","ScoresComponent","display","justifyContent","padding","score_Score","Boolean","location","hostname","match","ReactDOM","render","_useReducer","useReducer","createState","_useReducer2","flexFlow","app_ScoresComponent","card_CardComponent","margin","textAlign","fontSize","lineHeight","position","top","left","width","fontWeight","color","background","userSelect","bottom","fontStyle","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+GACAA,EAAAC,QAAA,CAAkBC,UAAA,wBAAAC,SAAA,uBAAAC,YAAA,0BAAAC,UAAA,wBAAAC,OAAA,qBAAAC,YAAA,0BAAAC,kBAAA,gCAAAC,WAAA,yBAAAC,iBAAA,sKCQLC,EAAmC,CAC5CC,MCRwB,CACxBC,UAAW,CACPR,UAAW,uEACXD,YAAa,yQACbU,IAAK,CACDV,YAAa,8FACbW,OAAQ,CACJC,OAAQ,IAEZC,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,uEACXD,YACI,0WACJU,IAAK,CACDV,YAAa,8FACbW,OAAQ,CACJC,OAAQ,IAEZC,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,uEACXD,YAAa,6CACbU,IAAK,CACDV,YAAa,mHACbW,OAAQ,CACJC,OAAQ,IAEZC,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,iEACXD,YACI,8VACJU,IAAK,CACDV,YAAa,uHACbW,OAAQ,CACJC,OAAQ,KAGhBI,GAAI,CACAhB,YAAa,8HACbW,OAAQ,CACJM,MAAO,QAM3BD,GAAI,CACAhB,YAAa,4DACbW,OAAQ,CACJM,MAAO,QAM3BD,GAAI,CACAhB,YAAa,+CACbW,OAAQ,CACJM,MAAO,QAM3BD,GAAI,CACAhB,YAAa,uCACbW,OAAQ,CACJM,MAAO,OD/DnBC,IETsB,CACtBT,UAAW,CACPR,UAAW,6EACXD,YAAa,sLACbU,IAAK,CACDV,YAAa,6EACbW,OAAQ,CACJQ,UAAW,GACXP,MAAO,KAGfI,GAAI,CACAhB,YAAa,iEACbW,OAAQ,CACJQ,SAAU,EACVP,OAAQ,OFLpBQ,QGV0B,CAC1BX,UAAW,CACPR,UAAW,6EACXD,YAAa,wMACbU,IAAK,CACDV,YAAa,mDACbW,OAAQ,CACJM,KAAM,GAEVJ,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,6EACXD,YAAa,yPACbU,IAAK,CACDV,YAAa,wCACbW,OAAQ,CACJC,OAAQ,GAEZC,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,+BACXD,YACI,6aACJU,IAAK,CACDV,YAAa,iCACbW,OAAQ,CACJC,OAAQ,GACRK,KAAM,KAGdD,GAAI,CACAhB,YAAa,qBACbW,OAAQ,CACJM,MAAO,GACPI,MAAO,GACPT,MAAO,OAM3BI,GAAI,CACAhB,YAAa,qBACbW,OAAQ,CACJU,MAAO,GACPJ,MAAO,GACPL,MAAO,QAM3BI,GAAI,CACAhB,YAAa,qBACbW,OAAQ,CACJM,MAAO,GAEXJ,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,6EACXD,YAAa,mLACbU,IAAK,CACDV,YAAa,kFACbW,OAAQ,CACJM,KAAM,GAEVJ,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,6EACXD,YAAa,0OACbU,IAAK,CACDV,YAAa,2BACbW,OAAQ,CACJC,OAAQ,GAEZC,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,+BACXD,YACI,2TACJU,IAAK,CACDV,YAAa,iGACbW,OAAQ,CACJC,OAAQ,GACRK,KAAM,GACNI,MAAO,IAGfL,GAAI,CACAhB,YAAa,qBACbW,OAAQ,CACJC,MAAO,EACPK,MAAO,GACPI,MAAO,QAM3BL,GAAI,CACAhB,YAAa,qBACbW,OAAQ,CACJM,MAAO,GACPL,MAAO,GACPS,MAAO,QAM3BL,GAAI,CACAhB,YAAa,qDACbW,OAAQ,CACJM,MAAO,UH3G/BK,SIX2B,CAC3Bb,UAAW,CACPR,UAAW,iEACXD,YAAa,8QACbU,IAAK,CACDV,YAAa,iCACbW,OAAQ,CACJU,KAAM,GACNJ,KAAM,EACNL,OAAQ,KAGhBI,GAAI,CACAhB,YAAa,qBACbW,OAAQ,CACJM,MAAO,EACPI,MAAO,OJJnBE,cKZgC,CAChCd,UAAW,CACPR,UAAW,6EACXD,YAAa,0TACbU,IAAK,CACDV,YAAa,eACbW,OAAQ,CAAEC,MAAO,GAAIO,SAAU,KAEnCH,GAAI,CACAhB,YAAa,6EACbW,OAAQ,CAAEC,OAAQ,GAAIO,UAAW,OLIzCK,OMdyB,CACzBf,UAAW,CACPR,UAAW,6EACXD,YAAa,iMACbU,IAAK,CACDV,YAAa,qBACbW,OAAQ,GACRE,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,mFACXD,YAAa,uRACbU,IAAK,CACDV,YAAa,8FACbW,OAAQ,CACJM,KAAM,GACNI,MAAO,KAGfL,GAAI,CACAhB,YAAa,yFACbW,OAAQ,CACJM,MAAO,QAM3BD,GAAI,CACAhB,YAAa,eACbW,OAAQ,GACRE,SAAU,CACNC,UAAW,EACXC,KAAM,CACFd,UAAW,iEACXD,YACI,6aACJU,IAAK,CACDV,YAAa,sEACbW,OAAQ,CACJU,MAAO,GACPJ,MAAO,KAGfD,GAAI,CACAhB,YAAa,6EACbW,OAAQ,CACJU,MAAO,WC9CtBI,EAAS,SAACC,GAEnB,MAAO,CADPA,EAAe,MAAPA,EAAgB,YACTA,EAAO,GAAK,aA0BlBC,EAAa,SAACD,GACvB,IAAME,EAAaC,OAAOC,KAAKvB,GAD+BwB,EAEjCC,EAAeN,EAAME,GAFYK,EAAAJ,OAAAK,EAAA,EAAAL,CAAAE,EAAA,GAG9D,MAAO,CAHuDE,EAAA,GAAAA,EAAA,GAGnCE,IAAI,SAACC,GAAD,MAAW,CAAEC,MAAOD,EAAMrB,KAAMR,EAAO6B,GAAM3B,eAGnEuB,EAAiB,SAAIN,EAAcY,GAG5C,IAFA,IAAMC,EAAKV,OAAAW,EAAA,EAAAX,CAAOS,GAETG,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAAK,CACnC,IAAME,EAAMlB,EAAOC,GACnBA,EAAOiB,EAAI,GACX,IAAMC,EAAQH,EAAII,KAAKC,MAAMH,EAAI,IAAMJ,EAAMG,OAASD,IAChDM,EAAIR,EAAME,GAChBF,EAAME,GAAKF,EAAMK,GACjBL,EAAMK,GAASG,EAGnB,MAAO,CAACrB,EAAMa,ICpCLS,EAAU,SAACC,EAAcC,GAClC,OAAQA,EAAOC,MACX,IAAK,MACD,OAAOzC,EAAIuC,EAAOC,GACtB,IAAK,KACD,OAAOlC,EAAGiC,EAAOC,GACrB,IAAK,aACD,OAAOE,EAAWH,EAAOC,GAC7B,QACI,OAAOD,IAIbG,EAAa,SAACH,EAADI,GAAuD,IAAtCC,EAAsCD,EAAtCC,OAChC,OAAOzB,OAAA0B,EAAA,EAAA1B,CAAA,GACAoB,EADP,CAEIK,YAIFE,EAAS,SAACP,EAAcO,GAA8B,IDzB7BjB,EAAYK,EAAea,ECyBEC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAC7BoB,EAAMW,MAA1BvB,EADiDqB,EAAA,GACjDrB,MAAYuB,EADqCF,EAAAG,MAAA,GAGpDL,EAAO3C,UD5BgB0B,EC6BJqB,ED7BgBhB,EC6BVY,EAAO3C,SAASC,UD7BS2C,EC6BE,CAAEpB,QAAOtB,KAAMyC,EAAO3C,SAASE,MAAnF6C,ED7BmB,GAAAE,OAAAjC,OAAAW,EAAA,EAAAX,CACpBU,EAAMsB,MAAM,EAAGjB,IADK,CAEvBa,GAFuB5B,OAAAW,EAAA,EAAAX,CAGpBU,EAAMsB,MAAMjB,MC4BXgB,EAAI,GAAAE,OAAAjC,OAAAW,EAAA,EAAAX,CAAO+B,GAAP,CAAa,CAAEvB,QAAOtB,KAAMR,EAAO8B,GAAO5B,aANM,IASlDiB,EAASuB,EAATvB,KAEN,GAAoB,IAAhBkC,EAAKlB,OAAc,KAAAqB,EACJpC,EAAWD,GADPsC,EAAAnC,OAAAK,EAAA,EAAAL,CAAAkC,EAAA,GAClBrC,EADkBsC,EAAA,GACZJ,EADYI,EAAA,GAIvB,IAAMrD,EAASsD,EAAUhB,EAAMtC,OAAQ6C,EAAO7C,QAE9C,OAAOkB,OAAA0B,EAAA,EAAA1B,CAAA,GACAoB,EADP,CAEIvB,OACAf,SACAiD,OACAN,YAAQY,EACRC,KAAMC,EAAUzD,GAChB0D,IAAKpB,EAAMoB,IAAM,KAInB3D,EAAM,SAACuC,EAAcqB,GACvB,OAAOd,EAAOP,EAAOA,EAAMW,KAAK,GAAG7C,KAAKL,MAGtCM,EAAK,SAACiC,EAAcqB,GACtB,OAAOd,EAAOP,EAAOA,EAAMW,KAAK,GAAG7C,KAAKC,KAGtCiD,EAAY,SAACM,EAAeC,GAC9B,IAAMC,EAAK,SAACC,GAAD,ODxDOC,ECwDcD,EDxDCE,ECwDE,EDxDWC,ECwDR,IDvDtCF,EAAQ9B,KAAKgC,IAAIF,EAAOC,GACxBD,EAAQ9B,KAAK+B,IAAID,EAAOE,GAFP,IAACF,EAAeC,EAAaC,GC0D9C,MAAO,CACH1D,SAAUqD,EAAKrD,SAAWsD,EAAGF,EAAMpD,SAAWqD,EAAKrD,UAAYoD,EAAMpD,SACrEP,MAAO4D,EAAK5D,MAAQ6D,EAAGF,EAAM3D,MAAQ4D,EAAK5D,OAAS2D,EAAM3D,MACzDK,KAAMuD,EAAKvD,KAAOwD,EAAGF,EAAMtD,KAAOuD,EAAKvD,MAAQsD,EAAMtD,KACrDI,KAAMmD,EAAKnD,KAAOoD,EAAGF,EAAMlD,KAAOmD,EAAKnD,MAAQkD,EAAMlD,OAIvD+C,EAAY,SAACzD,GACf,OACwB,IAApBA,EAAOQ,UACa,MAApBR,EAAOQ,UACS,IAAhBR,EAAOU,MACS,MAAhBV,EAAOU,MACU,IAAjBV,EAAOC,OACU,MAAjBD,EAAOC,OACS,IAAhBD,EAAOM,MACS,MAAhBN,EAAOM,sBChFF6D,EAAQ,SAAAzB,GAA6C,IAA1CF,EAA0CE,EAA1CF,KAAMwB,EAAoCtB,EAApCsB,MAAOI,EAA6B1B,EAA7B0B,WACjC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOtF,WACnBkF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,OAEfL,EAAAC,EAAAC,cAAA,OACIC,UAAWC,IAAOE,WAClBC,MAAO,CAAEC,WAAYT,EAAa,UAAY,aAI1DC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOK,QACnBT,EAAAC,EAAAC,cAAA,OACIC,UAAWC,IAAOM,YAClBH,MAAO,CACHI,OAAM,GAAA7B,OAAKa,EAAL,SAIlBK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOQ,MAAOzC,6BChB7B0C,EAAgB,SAAAxC,GAGH,IAAAyC,EAAAzC,EAFtBtC,KAAQd,EAEc6F,EAFd7F,UAAWD,EAEG8F,EAFH9F,YAAaU,EAEVoF,EAFUpF,IAAKM,EAEf8E,EAFe9E,GACrC+E,EACsB1C,EADtB0C,SACsBC,EACIC,mBAAS,CAC/BC,MAAM,EACNC,MAAO,CAAC,EAAG,GACXC,KAAM,CAAC,EAAG,KAJQC,EAAAxE,OAAAK,EAAA,EAAAL,CAAAmE,EAAA,GACf/C,EADeoD,EAAA,GACRC,EADQD,EAAA,GA0BhBE,EAAY,WACTtD,EAAMiD,OAIPjD,EAAMmD,KAAK,GApCC,GAqCZL,EAAS,CAAE5C,KAAM,QACVF,EAAMmD,KAAK,IAtCN,IAuCZL,EAAS,CAAE5C,KAAM,OAGrBmD,EAASzE,OAAA0B,EAAA,EAAA1B,CAAA,GACFoB,EADC,CAEJiD,MAAM,EACNC,MAAO,CAAC,EAAG,GACXC,KAAM,CAAC,EAAG,QA8ClBI,oBAAU,WAGN,OAFAC,OAAOC,iBAAiB,UAAWH,GACnCE,OAAOC,iBAAiB,WAAYH,GAC7B,WACHE,OAAOE,oBAAoB,UAAWJ,GACtCE,OAAOE,oBAAoB,WAAYJ,MAI/C,IAAMK,EAAI,IACJC,EAAI5D,EAAMmD,KAAK,GAIfU,EAAQjE,KAAKkE,KAAKF,EAAID,GACtBI,EAAInE,KAAKoE,KAAKL,EAAIA,EAAIC,EAAIA,GAE5BK,EAAa,GAOjB,OANIjE,EAAMmD,KAAK,GA9GK,GA+GhBc,EAAaxG,EAAIV,YACViD,EAAMmD,KAAK,IAhHF,KAiHhBc,EAAalG,EAAGhB,aAIhBgF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOtF,WACnBkF,EAAAC,EAAAC,cAAA,OACIC,UAAWC,IAAOrF,SAClBoH,YA5GQ,SAACC,GACjBA,EAAGC,iBACHf,EAASzE,OAAA0B,EAAA,EAAA1B,CAAA,GACFoB,EADC,CAEJiD,MAAM,EACNC,MAAO,CAACiB,EAAGE,QAASF,EAAGG,aAwGnBC,YAvEQ,SAACJ,GACjBA,EAAGC,iBAEEpE,EAAMiD,OAIPjD,EAAMmD,KAAK,GAzDC,GA0DZL,EAAS,CAAE5C,KAAM,aAAcG,OAAQ,QAChCL,EAAMmD,KAAK,IA3DN,GA4DZL,EAAS,CAAE5C,KAAM,aAAcG,OAAQ,OAEvCyC,EAAS,CAAE5C,KAAM,aAAcG,YAAQY,IAG3CoC,EAASzE,OAAA0B,EAAA,EAAA1B,CAAA,GACFoB,EADC,CAEJmD,KAAM,CAACgB,EAAGE,QAAUrE,EAAMkD,MAAM,GAAIiB,EAAGG,QAAUtE,EAAMkD,MAAM,SAuDzDsB,aArGS,SAACL,GAClBA,EAAGC,iBACH,IAAMK,EAAQN,EAAGO,QAAQ,GACzBrB,EAASzE,OAAA0B,EAAA,EAAA1B,CAAA,GACFoB,EADC,CAEJiD,MAAM,EACNC,MAAO,CAACuB,EAAMJ,QAASI,EAAMH,aAgGzBK,YApDQ,SAACR,GAEjB,GADAA,EAAGC,iBACEpE,EAAMiD,KAAX,CAIIjD,EAAMmD,KAAK,GA7EC,GA8EZL,EAAS,CAAE5C,KAAM,aAAcG,OAAQ,QAChCL,EAAMmD,KAAK,IA/EN,GAgFZL,EAAS,CAAE5C,KAAM,aAAcG,OAAQ,OAEvCyC,EAAS,CAAE5C,KAAM,aAAcG,YAAQY,IAG3C,IAAMwD,EAAQN,EAAGO,QAAQ,GACzBrB,EAASzE,OAAA0B,EAAA,EAAA1B,CAAA,GACFoB,EADC,CAEJmD,KAAM,CAACsB,EAAMJ,QAAUrE,EAAMkD,MAAM,GAAIuB,EAAMH,QAAUtE,EAAMkD,MAAM,SAoC/DZ,MAAO,CACHsC,UAAS,aAAA/D,OAAeb,EAAMmD,KAAK,GAA1B,QAAAtC,OAAmC8C,EAAII,EAAvC,eAAAlD,OAAsDgD,EAAtD,UAGb9B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOpF,aAAcA,GAIrCgF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACIC,WAAY,CACRC,MAAO5C,IAAOjF,YACd8H,YAAa7C,IAAOhF,kBACpB8H,KAAM9C,IAAO/E,WACb8H,WAAY/C,IAAO9E,kBAEvB8H,QAAS,CACLJ,MAAO,IACPE,KAAM,IAEVG,GAA0B,IAAtBnB,EAAWxE,OACf4F,eAAa,GAEbtD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlF,QAASgH,IAEnCjH,GAAa+E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOnF,WAAYA,MClJ3DsI,EAAkB,SAAAlF,GAAqC,IAAlC1C,EAAkC0C,EAAlC1C,OAAQ6C,EAA0BH,EAA1BG,OAC/B,OACIwB,EAAAC,EAAAC,cAAA,OACIK,MAAO,CACHiD,QAAS,OACTC,eAAgB,gBAChBC,QAAS,wBAGb1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyD,EAAD,CACIxF,KAAM,WACNwB,MAAOhE,EAAOQ,SACd4D,WAAYvB,GAAUoF,QAAQpF,EAAOrC,aAG7C6D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyD,EAAD,CACIxF,KAAM,OACNwB,MAAOhE,EAAOU,KACd0D,WAAYvB,GAAUoF,QAAQpF,EAAOnC,SAG7C2D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyD,EAAD,CACIxF,KAAM,OACNwB,MAAOhE,EAAOM,KACd8D,WAAYvB,GAAUoF,QAAQpF,EAAOvC,SAG7C+D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyD,EAAD,CACIxF,KAAM,QACNwB,MAAOhE,EAAOC,MACdmE,WAAYvB,GAAUoF,QAAQpF,EAAO5C,YClCrCgI,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOjE,EAAAC,EAAAC,cF6CG,WAAM,IAAAgE,EACKC,qBAAWnG,EGnDd,SAACtB,GAAwB,IAAAqC,EACvBpC,EAAWD,GADYsC,EAAAnC,OAAAK,EAAA,EAAAL,CAAAkC,EAAA,GAGhD,MAAO,CACHrC,KAJ4CsC,EAAA,GAK5CrD,OAAQ,CACJQ,SAAU,GACVP,MAAO,GACPS,KAAM,GACNJ,KAAM,IAEV2C,KAX4CI,EAAA,GAY5CG,MAAM,EACNE,IAAK,GHsCqC+E,CAAY,IADrCC,EAAAxH,OAAAK,EAAA,EAAAL,CAAAqH,EAAA,GACdjG,EADcoG,EAAA,GACPtD,EADOsD,EAAA,GAGftI,EAAOkC,EAAMW,KAAK,GAAG7C,KAE3B,OACIiE,EAAAC,EAAAC,cAAA,OACIK,MAAO,CACHiD,QAAS,OACTc,SAAU,SACVb,eAAgB,gBAChB9C,OAAQ,SAGZX,EAAAC,EAAAC,cAACqE,EAAD,CACI5I,OAAQsC,EAAMtC,OACd6C,OAAQP,EAAMK,QAAUvC,EAAKkC,EAAMK,QAAQ3C,SAE/CqE,EAAAC,EAAAC,cAACsE,EAAD,CAAezI,KAAMA,EAAMgF,SAAUA,IACrCf,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEkE,OAAQ,cAAeC,UAAW,WAC5C1E,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEoE,SAAU,OAAQC,WAAY,KAAQ3G,EAAMoB,KAC1DW,EAAAC,EAAAC,cAAA,mBAEHjC,EAAMkB,MACHa,EAAAC,EAAAC,cAAA,OACIK,MAAO,CACHsE,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,QACPrE,OAAQ,OACRiE,WAAY,QACZF,UAAW,SACXC,SAAU,OACVM,WAAY,IACZC,MAAO,UACPC,WAAY,wCACZC,WAAY,SAbpB,UAmBJpF,EAAAC,EAAAC,cAAA,OACIK,MAAO,CACHsE,SAAU,WACVQ,OAAQ,EACRN,KAAM,EACNO,UAAW,SACXX,SAAU,SANlB,ySExFI,MAASY,SAASC,eAAe,SDiI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCG1InBlL,EAAAC,QAAA,CAAkBC,UAAA,yBAAAuF,MAAA,qBAAAC,WAAA,0BAAAG,OAAA,sBAAAC,YAAA,2BAAAE,KAAA","file":"static/js/main.3d33c4a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__1Hmar\",\"movePart\":\"card_movePart__1d6FU\",\"description\":\"card_description__3Lddi\",\"character\":\"card_character__1GHwD\",\"choice\":\"card_choice__SsE7H\",\"choiceEnter\":\"card_choiceEnter__3g0Yi\",\"choiceEnterActive\":\"card_choiceEnterActive__2V2tm\",\"choiceExit\":\"card_choiceExit__2LDby\",\"choiceExitActive\":\"card_choiceExitActive__1NAWt\"};","import { offer } from './offer';\nimport { ads } from './ads';\nimport { Suite } from '../types';\nimport { newTech } from './newTech';\nimport { refactor } from './refactor';\nimport { fridayRelease } from './fridayRelease';\n// import { ccpm } from './ccpm';\nimport { junior } from './junior';\n\nexport const suites: { [key: string]: Suite } = {\n    offer,\n    ads,\n    newTech,\n    refactor,\n    fridayRelease,\n    // ccpm,\n    junior,\n};\n","import { Suite } from '../types';\n\nexport const offer: Suite = {\n    startCard: {\n        character: 'Вася, мухожук',\n        description: 'Я ухожу, меня позвали в Nanosoft с увеличением зарплаты на 20%',\n        yes: {\n            description: 'Поднять зарплату',\n            scores: {\n                money: -10,\n            },\n            nextCard: {\n                skipSteps: 3,\n                card: {\n                    character: 'Вася, мухожук',\n                    description:\n                        'Друг предложил мне работать в Pear, я подумал и ухожу, там зарплата на 50% выше',\n                    yes: {\n                        description: 'Поднять зарплату',\n                        scores: {\n                            money: -15,\n                        },\n                        nextCard: {\n                            skipSteps: 3,\n                            card: {\n                                character: 'Вася, мухожук',\n                                description: 'Ухожу. Hooli. x2.',\n                                yes: {\n                                    description: 'Поднять зарплату до х2',\n                                    scores: {\n                                        money: -20,\n                                    },\n                                    nextCard: {\n                                        skipSteps: 3,\n                                        card: {\n                                            character: 'Петя, сеньор',\n                                            description:\n                                                'Почему Васе подняли зарплату, а мне нет? Он делает в 2 раза меньше меня!',\n                                            yes: {\n                                                description: 'Поднять зарплату Пете',\n                                                scores: {\n                                                    money: -20,\n                                                },\n                                            },\n                                            no: {\n                                                description: 'У Васи сложная ситуация',\n                                                scores: {\n                                                    team: -10,\n                                                },\n                                            },\n                                        },\n                                    },\n                                },\n                                no: {\n                                    description: 'Ну и катись!',\n                                    scores: {\n                                        team: -20,\n                                    },\n                                },\n                            },\n                        },\n                    },\n                    no: {\n                        description: 'Ну, удачи',\n                        scores: {\n                            team: -10,\n                        },\n                    },\n                },\n            },\n        },\n        no: {\n            description: 'Прощай',\n            scores: {\n                team: -10,\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const ads: Suite = {\n    startCard: {\n        character: 'Лена, аналитик',\n        description: 'Повесим рекламный баннер на входе?',\n        yes: {\n            description: 'Деньги — нужны',\n            scores: {\n                audience: -10,\n                money: 20,\n            },\n        },\n        no: {\n            description: 'Чёт, перебор',\n            scores: {\n                audience: 5,\n                money: -10,\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const newTech: Suite = {\n    startCard: {\n        character: 'Федор, новатор',\n        description: 'Хочу для нового модуля использовать Reason',\n        yes: {\n            description: 'Попробуй',\n            scores: {\n                team: 5,\n            },\n            nextCard: {\n                skipSteps: 3,\n                card: {\n                    character: 'Лена, аналитик',\n                    description: 'Пора нанимать нового разработчика со знанием Reason',\n                    yes: {\n                        description: 'Вперед!',\n                        scores: {\n                            money: -5,\n                        },\n                        nextCard: {\n                            skipSteps: 3,\n                            card: {\n                                character: 'Лиза, HR',\n                                description:\n                                    'Мы нашли разработчика со знанием Reason, но он привык к зарплате в полтора раз выше, берем?',\n                                yes: {\n                                    description: 'Берем',\n                                    scores: {\n                                        money: -20,\n                                        team: 10,\n                                    },\n                                },\n                                no: {\n                                    description: 'Нет',\n                                    scores: {\n                                        team: -10,\n                                        code: -10,\n                                        money: 5,\n                                    },\n                                },\n                            },\n                        },\n                    },\n                    no: {\n                        description: 'Нет',\n                        scores: {\n                            code: -10,\n                            team: -10,\n                            money: 10,\n                        },\n                    },\n                },\n            },\n        },\n        no: {\n            description: 'Нет',\n            scores: {\n                team: -5,\n            },\n            nextCard: {\n                skipSteps: 3,\n                card: {\n                    character: 'Федор, новатор',\n                    description: 'Хочу попробовать на проекте язык Elm',\n                    yes: {\n                        description: 'Давай попробуй',\n                        scores: {\n                            team: 5,\n                        },\n                        nextCard: {\n                            skipSteps: 3,\n                            card: {\n                                character: 'Лена, аналитик',\n                                description: 'Пора искать нового разработчика со знанием Elm',\n                                yes: {\n                                    description: 'Ищем',\n                                    scores: {\n                                        money: -5,\n                                    },\n                                    nextCard: {\n                                        skipSteps: 3,\n                                        card: {\n                                            character: 'Лиза, HR',\n                                            description:\n                                                'На рынке нет разрабов со знанием Elm, берем обычного со знанием JS?',\n                                            yes: {\n                                                description: 'А что делать? Берем',\n                                                scores: {\n                                                    money: -10,\n                                                    team: 10,\n                                                    code: -5,\n                                                },\n                                            },\n                                            no: {\n                                                description: 'Нет',\n                                                scores: {\n                                                    money: 5,\n                                                    team: -10,\n                                                    code: -10,\n                                                },\n                                            },\n                                        },\n                                    },\n                                },\n                                no: {\n                                    description: 'Нет',\n                                    scores: {\n                                        team: -10,\n                                        money: 10,\n                                        code: -10,\n                                    },\n                                },\n                            },\n                        },\n                    },\n                    no: {\n                        description: 'Зачем? Нет',\n                        scores: {\n                            team: -10,\n                        },\n                        // тут он дальше пробует еще какую-нибудь хипстерскую технологию\n                    },\n                },\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const refactor: Suite = {\n    startCard: {\n        character: 'Петя, сеньор',\n        description: 'Я думаю, что нам пора порефакторить работу со стором',\n        yes: {\n            description: 'Давай',\n            scores: {\n                code: 20,\n                team: 5,\n                money: -10,\n            },\n        },\n        no: {\n            description: 'Нет',\n            scores: {\n                team: -5,\n                code: -10,\n            },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const fridayRelease: Suite = {\n    startCard: {\n        character: 'Лена, аналитик',\n        description: 'Мы готовы зарелизить новую фичу, но сегодня пятница, отложим?',\n        yes: {\n            description: 'Да',\n            scores: { money: 10, audience: 10 },\n        },\n        no: {\n            description: 'Нет, релизимся',\n            scores: { money: -10, audience: -10 },\n        },\n    },\n};\n","import { Suite } from '../types';\n\nexport const junior: Suite = {\n    startCard: {\n        character: 'Антон, джуниор',\n        description: 'А тебе, что больше нравится: ООП или ФП?',\n        yes: {\n            description: 'ООП',\n            scores: {},\n            nextCard: {\n                skipSteps: 3,\n                card: {\n                    character: 'Андрей, джуниор',\n                    description: 'Я сделал тройное наследование с абстрактным классом',\n                    yes: {\n                        description: 'Попробуй примеси',\n                        scores: {\n                            team: 10,\n                            code: -10,\n                        },\n                    },\n                    no: {\n                        description: 'Завязывай с этим',\n                        scores: {\n                            team: -10,\n                        },\n                    },\n                },\n            },\n        },\n        no: {\n            description: 'ФП',\n            scores: {},\n            nextCard: {\n                skipSteps: 3,\n                card: {\n                    character: 'Петя, сеньор',\n                    description:\n                        'Андрей пишет какой-то непонятный код и говорит, что это мультипликативный функтор',\n                    yes: {\n                        description: 'Пусть учится',\n                        scores: {\n                            code: -20,\n                            team: -10,\n                        },\n                    },\n                    no: {\n                        description: 'Поговорю с ним',\n                        scores: {\n                            code: -10,\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\n","import { suites } from './suites';\nimport { DeckCard } from './types';\n\nexport const random = (seed: number) => {\n    seed = (seed * 16807) % 2147483647;\n    return [seed, (seed - 1) / 2147483646];\n};\n\nexport const arrayInsert = <T>(array: T[], index: number, newItem: T): T[] => [\n    ...array.slice(0, index),\n    newItem,\n    ...array.slice(index),\n];\n\nexport const clamp = (value: number, min: number, max: number) => {\n    value = Math.max(value, min);\n    value = Math.min(value, max);\n    return value;\n};\n\nexport const randomDeckCard = (seed: number): [number, DeckCard] => {\n    const suiteNames = Object.keys(suites);\n    const [nextSeed, randomValue] = random(seed);\n    const suiteName = suiteNames[Math.floor(randomValue * suiteNames.length)];\n    const deckCard: DeckCard = {\n        suite: suiteName,\n        card: suites[suiteName].startCard,\n    };\n    return [nextSeed, deckCard];\n};\n\nexport const randomDeck = (seed: number): [number, DeckCard[]] => {\n    const suiteNames = Object.keys(suites);\n    const [nextSeed, rndNames] = randomizeArray(seed, suiteNames);\n    return [nextSeed, rndNames.map((name) => ({ suite: name, card: suites[name].startCard }))];\n};\n\nexport const randomizeArray = <T>(seed: number, inArray: T[]): [number, T[]] => {\n    const array = [...inArray];\n\n    for (let i = 0; i < array.length; i++) {\n        const rnd = random(seed);\n        seed = rnd[0];\n        const index = i + Math.floor(rnd[1] * (array.length - i));\n        const t = array[i];\n        array[i] = array[index];\n        array[index] = t;\n    }\n\n    return [seed, array];\n};\n","import {\n    Action,\n    State,\n    YesAction,\n    NoAction,\n    Scores,\n    ScoresEffect,\n    CardChoice,\n    ShowAnswerAction,\n} from './types';\nimport { arrayInsert, clamp, randomDeck } from './utils';\nimport { suites } from './suites';\n\nexport const reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'yes':\n            return yes(state, action);\n        case 'no':\n            return no(state, action);\n        case 'showAnswer':\n            return showAnswer(state, action);\n        default:\n            return state;\n    }\n};\n\nconst showAnswer = (state: State, { answer }: ShowAnswerAction): State => {\n    return {\n        ...state,\n        answer,\n    };\n};\n\nconst effect = (state: State, effect: CardChoice): State => {\n    let [{ suite }, ...deck] = state.deck;\n\n    if (effect.nextCard) {\n        deck = arrayInsert(deck, effect.nextCard.skipSteps, { suite, card: effect.nextCard.card });\n    } else {\n        deck = [...deck, { suite, card: suites[suite].startCard }];\n    }\n\n    let { seed } = state;\n\n    if (deck.length === 0) {\n        [seed, deck] = randomDeck(seed);\n    }\n\n    const scores = newScores(state.scores, effect.scores);\n\n    return {\n        ...state,\n        seed,\n        scores,\n        deck,\n        answer: undefined,\n        lose: checkLose(scores),\n        day: state.day + 1,\n    };\n};\n\nconst yes = (state: State, _action: YesAction): State => {\n    return effect(state, state.deck[0].card.yes);\n};\n\nconst no = (state: State, _action: NoAction): State => {\n    return effect(state, state.deck[0].card.no);\n};\n\nconst newScores = (score: Scores, diff: ScoresEffect): Scores => {\n    const sc = (v: number) => clamp(v, 0, 100);\n\n    return {\n        audience: diff.audience ? sc(score.audience + diff.audience) : score.audience,\n        money: diff.money ? sc(score.money + diff.money) : score.money,\n        team: diff.team ? sc(score.team + diff.team) : score.team,\n        code: diff.code ? sc(score.code + diff.code) : score.code,\n    };\n};\n\nconst checkLose = (scores: Scores): boolean => {\n    return (\n        scores.audience === 0 ||\n        scores.audience === 100 ||\n        scores.code === 0 ||\n        scores.code === 100 ||\n        scores.money === 0 ||\n        scores.money === 100 ||\n        scores.team === 0 ||\n        scores.team === 100\n    );\n};\n","import React from 'react';\nimport styles from './index.module.css';\n\nexport interface ScoreProps {\n    type: string;\n    value: number;\n    willChange?: boolean;\n}\n\nexport const Score = ({ type, value, willChange }: ScoreProps) => {\n    return (\n        <div className={styles.container}>\n            <div className={styles.point}>\n                {\n                    <div\n                        className={styles.pointInner}\n                        style={{ visibility: willChange ? 'visible' : 'hidden' }}\n                    />\n                }\n            </div>\n            <div className={styles.volume}>\n                <div\n                    className={styles.innerVolume}\n                    style={{\n                        height: `${value}%`,\n                    }}\n                />\n            </div>\n            <div className={styles.icon}>{type}</div>\n        </div>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Card, Dispatch } from '../../types';\nimport styles from './index.module.css';\n\nexport interface CardComponentProps {\n    card: Card;\n    dispatch: Dispatch;\n}\n\nconst choiceThreshold = 30;\n\nexport const CardComponent = ({\n    card: { character, description, yes, no },\n    dispatch,\n}: CardComponentProps) => {\n    const [state, setState] = useState({\n        down: false,\n        start: [0, 0],\n        move: [0, 0],\n    });\n\n    const onMouseDown = (ev: React.MouseEvent) => {\n        ev.preventDefault();\n        setState({\n            ...state,\n            down: true,\n            start: [ev.clientX, ev.clientY],\n        });\n    };\n\n    const onTouchStart = (ev: React.TouchEvent) => {\n        ev.preventDefault();\n        const touch = ev.touches[0];\n        setState({\n            ...state,\n            down: true,\n            start: [touch.clientX, touch.clientY],\n        });\n    };\n\n    const onMouseUp = () => {\n        if (!state.down) {\n            return;\n        }\n\n        if (state.move[0] > choiceThreshold) {\n            dispatch({ type: 'yes' });\n        } else if (state.move[0] < -choiceThreshold) {\n            dispatch({ type: 'no' });\n        }\n\n        setState({\n            ...state,\n            down: false,\n            start: [0, 0],\n            move: [0, 0],\n        });\n    };\n\n    const onMouseMove = (ev: React.MouseEvent) => {\n        ev.preventDefault();\n\n        if (!state.down) {\n            return;\n        }\n\n        if (state.move[0] > choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'yes' });\n        } else if (state.move[0] < -choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'no' });\n        } else {\n            dispatch({ type: 'showAnswer', answer: undefined });\n        }\n\n        setState({\n            ...state,\n            move: [ev.clientX - state.start[0], ev.clientY - state.start[1]],\n        });\n    };\n\n    const onTouchMove = (ev: React.TouchEvent) => {\n        ev.preventDefault();\n        if (!state.down) {\n            return;\n        }\n\n        if (state.move[0] > choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'yes' });\n        } else if (state.move[0] < -choiceThreshold) {\n            dispatch({ type: 'showAnswer', answer: 'no' });\n        } else {\n            dispatch({ type: 'showAnswer', answer: undefined });\n        }\n\n        const touch = ev.touches[0];\n        setState({\n            ...state,\n            move: [touch.clientX - state.start[0], touch.clientY - state.start[1]],\n        });\n    };\n\n    useEffect(() => {\n        window.addEventListener('mouseup', onMouseUp);\n        window.addEventListener('touchend', onMouseUp);\n        return () => {\n            window.removeEventListener('mouseup', onMouseUp);\n            window.removeEventListener('touchend', onMouseUp);\n        };\n    });\n\n    const R = 500;\n    const x = state.move[0];\n    // x^2 + y^2 = R^2\n    // y = \\/r^2 - x^2\n    // x = sinA * R\n    const angle = Math.asin(x / R);\n    const y = Math.sqrt(R * R - x * x);\n\n    let choiceDesc = '';\n    if (state.move[0] > choiceThreshold) {\n        choiceDesc = yes.description;\n    } else if (state.move[0] < -choiceThreshold) {\n        choiceDesc = no.description;\n    }\n\n    return (\n        <div className={styles.container}>\n            <div\n                className={styles.movePart}\n                onMouseDown={onMouseDown}\n                onMouseMove={onMouseMove}\n                onTouchStart={onTouchStart}\n                onTouchMove={onTouchMove}\n                style={{\n                    transform: `translate(${state.move[0]}px, ${R - y}px) rotate(${angle}rad)`,\n                }}\n            >\n                <div className={styles.description}>{description}</div>\n                {/* <div>\n                    {state.move[0]} - {state.move[1]} - {y} - {angle}\n                </div> */}\n                <CSSTransition\n                    classNames={{\n                        enter: styles.choiceEnter,\n                        enterActive: styles.choiceEnterActive,\n                        exit: styles.choiceExit,\n                        exitActive: styles.choiceExitActive,\n                    }}\n                    timeout={{\n                        enter: 200,\n                        exit: 50,\n                    }}\n                    in={choiceDesc.length !== 0}\n                    unmountOnExit\n                >\n                    <div className={styles.choice}>{choiceDesc}</div>\n                </CSSTransition>\n                {character && <div className={styles.character}>{character}</div>}\n            </div>\n        </div>\n    );\n};\n","import React, { useReducer } from 'react';\nimport { reducer } from '../../reducers';\nimport { createState } from '../../state';\nimport { Scores, ScoresEffect } from '../../types';\nimport { Score } from '../score';\nimport { CardComponent } from '../card';\n\ninterface ScoresProps {\n    scores: Scores;\n    effect?: ScoresEffect;\n}\n\nconst ScoresComponent = ({ scores, effect }: ScoresProps) => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '10px 30px 20px 30px',\n            }}\n        >\n            <div>\n                <Score\n                    type={'audience'}\n                    value={scores.audience}\n                    willChange={effect && Boolean(effect.audience)}\n                />\n            </div>\n            <div>\n                <Score\n                    type={'code'}\n                    value={scores.code}\n                    willChange={effect && Boolean(effect.code)}\n                />\n            </div>\n            <div>\n                <Score\n                    type={'team'}\n                    value={scores.team}\n                    willChange={effect && Boolean(effect.team)}\n                />\n            </div>\n            <div>\n                <Score\n                    type={'money'}\n                    value={scores.money}\n                    willChange={effect && Boolean(effect.money)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport const App = () => {\n    const [state, dispatch] = useReducer(reducer, createState(1));\n\n    const card = state.deck[0].card;\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexFlow: 'column',\n                justifyContent: 'space-between',\n                height: '100%',\n            }}\n        >\n            <ScoresComponent\n                scores={state.scores}\n                effect={state.answer && card[state.answer].scores}\n            />\n            <CardComponent card={card} dispatch={dispatch} />\n            <div style={{ margin: '20px 0 20px', textAlign: 'center' }}>\n                <div style={{ fontSize: '60px', lineHeight: 0.9 }}>{state.day}</div>\n                <div>day</div>\n            </div>\n            {state.lose && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100vw',\n                        height: '100%',\n                        lineHeight: '100vh',\n                        textAlign: 'center',\n                        fontSize: '70px',\n                        fontWeight: 700,\n                        color: '#ff0000',\n                        background: 'radial-gradient(#ff00004f, #00000000)',\n                        userSelect: 'none',\n                    }}\n                >\n                    WASTED\n                </div>\n            )}\n            <div\n                style={{\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    fontStyle: 'italic',\n                    fontSize: '10px',\n                }}\n            >\n                Игра про сложную жизнь тимлида. Все совпадения случайны.\n            </div>\n        </div>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { State } from './types';\nimport { randomDeck } from './utils';\n\nexport const createState = (seed: number): State => {\n    const [nextSeed, deck] = randomDeck(seed);\n\n    return {\n        seed: nextSeed,\n        scores: {\n            audience: 50,\n            money: 50,\n            code: 50,\n            team: 50,\n        },\n        deck,\n        lose: false,\n        day: 1,\n    };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"score_container__jQKy_\",\"point\":\"score_point__1Rs-2\",\"pointInner\":\"score_pointInner__2vtxz\",\"volume\":\"score_volume__3dj9j\",\"innerVolume\":\"score_innerVolume__IbpTs\",\"icon\":\"score_icon__3S58M\"};"],"sourceRoot":""}